
¡Claro! Vamos a abordar tus puntos uno por uno:

Túnel, webhook y endpoint:

Tienes razón. Configuraste un túnel con ngrok, lo que te proporcionó una URL pública que redirige las solicitudes a tu servidor local.
Configuraste tu webhook en MercadoPago para que, cuando haya un evento relacionado con un pago (por ejemplo, un pago completado), MercadoPago haga una solicitud POST a tu endpoint /notifications.
En tu servidor, creaste el endpoint /notifications para manejar estas notificaciones.
Funcionamiento y Email:

Cuando un usuario realiza un pago a través de MercadoPago, y dicho pago se aprueba, MercadoPago enviará una notificación a tu endpoint /notifications.
Si el topic de la notificación es payment y el estado del pago es approved, tu servidor enviará un correo electrónico al usuario informándole que su pago ha sido aprobado. Esto se logra con la función sendEmail que has definido.
Implementación del estado de la orden:

Ya has implementado la lógica para cambiar el estado de la orden a APPROVED cuando un usuario carga un comprobante.
Para MercadoPago, la lógica es similar. Cuando recibes una notificación de que un pago ha sido aprobado, puedes buscar la orden asociada en tu base de datos usando paymentInfo.body.order.id y luego actualizar su estado a APPROVED.
Componente emailServices:

Tu componente emailServices parece estar correctamente configurado para enviar correos electrónicos usando nodemailer y Gmail.
En el endpoint /notifications, ya estás llamando a sendEmail para enviar un correo electrónico al usuario cuando su pago es aprobado.

Para responder a tus preguntas:

1- ¿Debería mandar un email cuando alguien hizo una compra?
Sí, según tu implementación, cuando un pago es aprobado por MercadoPago, se enviará un correo electrónico al usuario informándole sobre la aprobación de su pago.

2- ¿Cómo implementamos el tema de los estados?
Ya tienes la lógica para cambiar el estado de una orden a APPROVED cuando un usuario carga un comprobante. Para MercadoPago, debes hacer lo siguiente en tu endpoint /notifications: